{**
 * This file is part of the Grido (http://grido.bugyik.cz)
 *
 * Copyright (c) 2011 Petr BugyÃ­k (http://petr.bugyik.cz)
 *
 * For the full copyright and license information, please view
 * the file LICENSE.md that was distributed with this source code.
*}

{snippet grid}
	{?
		$form->getElementPrototype()->class[] = 'ajax grido';

		$operation = $control->hasOperation();
		$actions = $control->hasActions() ? $control->getComponent(\Grido\Components\Actions\Action::ID)->getComponents() : array();

		$filters = $control->hasFilters() ? $form->getComponent(\Grido\Components\Filters\Filter::ID)->getComponents() : array();
		$filterRenderType = $control->getFilterRenderType();

		$columns = $control->getComponent(\Grido\Components\Columns\Column::ID)->getComponents();
		foreach ($columns as $colKey => $column) { if (!$column->isRenderable()): unset($columns[$colKey]); endif;}
		$columnCount = count($columns) + ($operation ? 1 : 0);
		$showActionsColumn = $actions || ($filters && $filterRenderType == \Grido\Components\Filters\Filter::RENDER_INNER);

		/* TWITTER BOOTSTRAP 2/3 */
		$buttons = $form->getComponent('buttons');
		$buttons->getComponent('search')->getControlPrototype()->class[] = 'btn btn-primary btn-sm search';
		$buttons->getComponent('reset')->getControlPrototype()->class[] = 'btn btn-default btn-sm reset';

		$form['count']->controlPrototype->class[] = 'form-control';
		$operation ? $form['operations']['operations']->controlPrototype->class[] = 'form-control' : NULL
	}

    {foreach $filters as $filter}
        {? $filter->controlPrototype->class[] = 'form-control' }
    {/foreach}

    {foreach $actions as $action}
        {?
            $element = $action->getElementPrototype();
            $element->class[] = 'btn btn-xs btn-mini';
        }
        {if $icon = $action->getOption('icon')}
			{?
				$element->setText(' ' . $action->getLabel());
				$element->insert(0, \Nette\Utils\Html::el('i')->setClass([$icon]));
			}
        {/if}
    {/foreach}
	{if $form->getErrors()}
		<div class="alert alert-danger" 
			 n:foreach="$form->getErrors() as $error">
			{$error}
		</div>
	{/if}
	
	{*** FORM START***}
	{form form}
		{if $filterRenderType == \Grido\Components\Filters\Filter::RENDER_OUTER}
			<div n:block="outerFilter" class="filter outer">
				<div class="items">
					<span n:foreach="$filters as $filter" class="grid-filter-{$filter->getName()}">
						{$filter->getLabel()}
						{$filter->getControl()}
					</span>
				</div>
				<div class="buttons">
					{formContainer buttons}
						{if $filters}{input search}{/if}
						{input reset}
					{/formContainer}
				</div>
			</div>
		{/if}

		{block table}
			{? $control->getTablePrototype()->id = $form->getElementPrototype()->id . '-table'}
			{$control->getTablePrototype()->startTag()|noescape}
				<thead>
					<tr class="heading" role="row">
						<th n:if="$operation" class="checker" width="1%">
							<div class="checkbox">
								<input type="checkbox" title="{_'Grido.Invert'}">
							</div>
						</th>
						{foreach $columns as $column}
							{$column->getHeaderPrototype()->startTag()|noescape}
							{if $column->isSortable()}
								<a n:if="!$column->getSort()" 
								   n:href="sort! [$column->getName() => \Grido\Components\Columns\Column::ORDER_ASC]" 
								   class="ajax">{$column->getLabel()|noescape}</a>
								<a n:if="$column->getSort() == \Grido\Components\Columns\Column::ORDER_ASC" 
								   n:href="sort! [$column->getName() => \Grido\Components\Columns\Column::ORDER_DESC]" 
								   class="sort ajax">{$column->getLabel()|noescape}</a>
								<a n:if="$column->getSort() == \Grido\Components\Columns\Column::ORDER_DESC" 
								   n:href="sort! [$column->getName() => \Grido\Components\Columns\Column::ORDER_ASC]" 
								   class="sort ajax">{$column->getLabel()|noescape}</a>
								<span></span>
							{else}
								{$column->getLabel()|noescape}
							{/if}
							{$column->getHeaderPrototype()->endTag()|noescape}
						{/foreach}
						<th n:if="$showActionsColumn" class="actions"{ifset $actionWidth} width="{$actionWidth}"{/ifset}>
							{_'Grido.Actions'}
						</th>
					</tr>
					<tr n:if="$filterRenderType == \Grido\Components\Filters\Filter::RENDER_INNER && $filters" class="filter inner">
						<th n:if="$operation">&nbsp;</th>
							{foreach $columns as $column}
								{if $column->hasFilter()}
									{$control->getFilter($column->getName())->getWrapperPrototype()->startTag()|noescape}
									{formContainer filters}
										{input $column->getName()}
									{/formContainer}
									{$control->getFilter($column->getName())->getWrapperPrototype()->endTag()|noescape}
								{elseif $column->headerPrototype->rowspan != 2}
								<th>&nbsp;</th>
								{/if}
							{/foreach}

						<th n:if="$filters" class="buttons" n:block="action">
							{formContainer buttons}
								{? $buttons = $form->getComponent('buttons'); }
								{button search}
									<i class="fa fa-search"></i>
									{$buttons->getComponent('search')->control->value}
								{/button}
								{button reset}
									<i class="fa fa-times"></i>
									{$buttons->getComponent('reset')->control->value}
								{/button}
							{/formContainer}
						</th>
					</tr>
				</thead>

				<tfoot>
					<tr>
						<td colspan="{=$showActionsColumn ? $columnCount + 1 : $columnCount}">
							<div class="row">
								<div class="col-md-3 col-sm-12">
									<span n:if="$operation" n:block="operations" class="operations" title="{_'Grido.SelectSomeRow'}">
										{?$form[\Grido\Components\Operation::ID][\Grido\Components\Operation::ID]->controlPrototype->class[] = 'input-small'}
										{$form[\Grido\Components\Operation::ID][\Grido\Components\Operation::ID]->control}
										{?$form[\Grido\Grid::BUTTONS][\Grido\Components\Operation::ID]->controlPrototype->class[] = 'hide'}
										{$form[\Grido\Grid::BUTTONS][\Grido\Components\Operation::ID]->control}
									</span>
								</div>
								<div class="col-md-6 col-sm-12">
									
									<div class="text-center">
										<ul n:block="paginator"
											class="pagination paginator"
											n:if="$paginator->steps && $paginator->pageCount > 1">
											
											{var $steps = $paginator->getSteps()}
											<li n:class="prev, $control->page == 1 ? disabled : ajax">
												<a n:href="page! page => reset($steps)" 
												   title="{_'Grido.First'}"
												   class="ajax">
													<i class="fa fa-angle-double-left"></i>
												</a>
											</li>
											{var $prevStep = $paginator->getPage() > reset($steps) ? $paginator->getPage() - 1 : reset($steps)}
											<li n:class="prev, $control->page == 1 ? disabled : ajax">
												<a n:href="page! page => $prevStep" 
												   title="{_'Grido.Previous'}"
												   class="ajax">
													<i class="fa fa-angle-left"></i>
												</a>
											</li>
											{foreach $steps as $step}
												<li n:class="$step == $control->page ? active">
													<a n:href="page! page => $step" class="ajax">{$step}</a>
												</li>
												<li n:if="$iterator->nextValue > $step + 1">
													<a class="prompt"
													   data-grido-prompt="{_'Grido.EnterPage'}"
													   data-grido-link="{link page! page => 0}">
														...
													</a>
												</li>
											{/foreach}	
											{var $nextStep = $paginator->getPage() < end($steps) ? $paginator->getPage() + 1 : end($steps)}
											<li n:class="next, $control->page == $paginator->getPageCount() ? disabled : ajax">
												<a n:href="page! page => $nextStep"
												   title="{_'Grido.Next'}"
												   class="ajax">
													<i class="fa fa-angle-right"></i>
												</a>
											</li>
											<li n:class="next, $control->page == $paginator->getPageCount() ? disabled : ajax">
												<a n:href="page! page => end($steps)"
												   title="{_'Grido.Last'}"
												   class="ajax">
													<i class="fa fa-angle-double-right"></i>
												</a>
											</li>
										</ul>
									</div>
								</div>
								<div class="col-md-3 col-sm-12">
									<div n:block="count" class="count form-inline text-right">
										<span class="text">
											{_'Grido.Items', NULL, ['begin' => $paginator->getCountBegin(), 'end' => $paginator->getCountEnd(), 'count' => $control->getCount()]}
										</span>
										{input count, class => 'form-control input-xsmall'}
										{formContainer buttons}
											{input perPage, class => 'hide'}
										{/formContainer}
										<a n:if="$control->hasExport()"
										   class="export btn btn-icon-only default"
										   href="{=$control->getComponent(\Grido\Components\Export::ID)->link('export!')}"
										   title="{_'Grido.ExportAllItems'}">
											<i class="fa fa-download"></i>
										</a>
									</div>
								</div>
							</div>
						</td>
					</tr>
				</tfoot>

				<tbody>
					{foreach $data as $row}
						{? 
							$checkbox = $operation
									? $form[\Grido\Components\Operation::ID][\Grido\Helpers::formatColumnName($control->getProperty($row, $control->getComponent(\Grido\Components\Operation::ID)->getPrimaryKey()))]
									: NULL;
								$tr = $control->getRowPrototype($row);
								$tr->class[] = $checkbox && $checkbox->getValue()
									? 'selected'
									: NULL;
						}
						{$tr->startTag()|noescape}
							<td n:if="$checkbox" class="checker">
								<div class="checkbox">
									{$checkbox->getControl()}
								</div>
							</td>
							{foreach $columns as $column}
								{?$td = $column->getCellPrototype($row)}
								{$td->startTag()|noescape}
								{if is_string($column->getCustomRender()) && $column->getCustomRenderVariables()}
									{include $column->getCustomRender() control => $control, presenter => $control->getPresenter(), item => $row, column => $column, (expand) $column->getCustomRenderVariables()}
								{elseif is_string($column->getCustomRender())}
									{include $column->getCustomRender() control => $control, presenter => $control->getPresenter(), item => $row, column => $column}
								{else}
									{$column->render($row)|noescape}
								{/if}
								{$td->endTag()|noescape}
							{/foreach}
							<td n:if="$showActionsColumn" class="actions center">
								{foreach $actions as $action}
									{control $action $row}
								{/foreach}
								{if !$actions}
									&nbsp;
								{/if}
							</td>
						{$tr->endTag()|noescape}
					{/foreach}
					<tr n:if="!$control->getCount()">
						<td colspan="{=$showActionsColumn ? $columnCount + 1 : $columnCount}" class="no-results">
							{_'Grido.NoResults'}
						</td>
					</tr>
				</tbody>
			{$control->getTablePrototype()->endTag()|noescape}
		{/block}
	{/form}
{/snippet}
